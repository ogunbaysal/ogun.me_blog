(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{208:function(e,t){e.exports={body:"## Why did I re-do my website with Nuxt?\n\nAlthough some of you already know me, I am [Marina AÃ­sa](https://twitter.com/MarinaAisa), UX Engineer (design and front-end) and I currently work at [Holaluz](https://www.holaluz.com/en).\n\nLast year, 2018, I was very focused on learning more about JavaScript, which was a pending subject and at the same time I learnt [Vue.js](https://vuejs.org/). Meanwhile at my workplace, we started using [Nuxt.js](https://nuxtjs.org/) a framework on VueJS to remake both company's static and dynamic (SPA) webapps into components and create a design system with it.\n\nMy previous website was made with [Middleman](https://middlemanapp.com/) a static pages generator based on Ruby, so I took the opportunity to redo my website with Nuxt and Vue, in order to:\n- To learn\n- Improve performance\n- Add functionality as a blog and portfolio system\n- Add two languages, Spanish and English, **also in blog posts** but independently, since I guess I won't translate every post in both languages.\n\nWhat attracts me the most of Nuxt is the philosophy *serverless* (Nuxt can also be SSR tho) and the static prerendering it provides to SPA applications. Briefly, with this stack you can combine the best of a static website: compiled HTML -> what leads to a better SEO, plus the best of a *single page application*: Webpack, cache optimizations, lazy-loading, functions and asynchronous data...\n\n## But where do I get the content if I don't have a server?\n\nNuxt, by following the architecture [JAMStack](https://jamstack.org/) is built to get content through APIs, so many people use headless CMSs like [Contentful](https://www.contentful.com/) or [Prismic](https://prismic.io/). At first I thought they were interesting options but I realized that it wasn't necessary for a website like mine since CMSs are oriented to be used by people without technical knowledge, besides they are expensive, they save assets on their own servers and they aren't the best option if I wanted to have the best performance.\n\n**Therefore, I decided to use a Markdowns system that I store in Github and call dynamically.**\n\n### Importing posts on the main page depending on the language\n\nUsing the asynchronous function <inline-code>asyncData</inline-code> that Nuxt provides only in its pages (it is not avalaible in its components) I import the Markdowns that I have saved in the folder <inline-code>content</inline-code> of the project. Later I return them in the form of a promise as an array of objects. As you can see below, this import depends on the constant <inline-code>blogs</inline-code> which will be the array <inline-code>blogsEs</inline-code> or <inline-code>blogsEn</inline-code> depending on the language of the page stored on the Vuex's state.\n\n```javascript\nimport blogsEn from '~/contents/en/blogsEn.js'\nimport blogsEs from '~/contents/tr/blogsTR.js'\n\nasync asyncData ({app}) {\n  const blogs = app.i18n.locale === 'en' ? blogsEn : blogsEs\n  \n  async function asyncImport (blogName) {\n    const wholeMD = await import(`~/content/${app.i18n.locale}/blog/${blogName}.md`)\n    return wholeMD.attributes\n  }\n\n  return Promise.all(blogs.map(blog => asyncImport(blog)))\n  .then((res) => {\n    return {\n      blogs: res\n    }\n  })\n}\n```\n\nThe reason why I'm importing the arrays containing the blogs names is because I want to use it also to generate the static pages through the object [generate](https://nuxtjs.org/api/configuration-generate/) in the Nuxt configuration, file <inline-code>nuxt.config.js</inline-code>.\n\n```javascript\nimport blogsEn from '~/contents/en/blogsEn.js'\nimport blogsEs from '~/contents/tr/blogsTR.js'\n\ngenerate: {\n  routes: [\n    '/es', '404'\n  ]\n  .concat(blogsEn.map(blog => `/blog/${blog}`))\n  .concat(blogsEs.map(blog => `es/blog/${blog}`))\n}\n```\n\n### Generating dynamic pages from Markdown files\n\nNuxt has a very interesting functionality, the creation of [dynamic routes](https://nuxtjs.org/guide/routing/#dynamic-routes).\n\nIn the next import I use the function <inline-code>asyncData</inline-code> instead of <inline-code>data</inline-code> as it's usual in Vue, to first import each Markdown and then return a new object with the information I want to use in the template of the page.\n**The URL will be equal to each markdown file's name.**\nIn the case that the md file doesn't exist it will simply go to error page 404.\n\n```javascript\nasync asyncData ({params, app}) {\n  const fileContent = await import(`~/contents/${app.i18n.locale}/blog/${params.slug}.md`)\n  const attr = fileContent.attributes\n  return {\n    colors: attr.colors,\n    date: attr.date,\n    description: attr.description,\n    id: attr.id,\n    name: params.slug,\n    related: attr.related,\n    renderFunc: fileContent.vue.render,\n    staticRenderFuncs: fileContent.vue.staticRenderFns,\n    title: attr.title,\n    urlTranslation: attr.urlTranslation\n  }\n}\n```\n\nIf we wanted to create a portfolio in the future, it would be exactly the same as the blog. We would create within <inline-code>contents</inline-code> a folder called <inline-code>portfolio</inline-code> and we would do the same process that we have done with <inline-code>blogs</inline-code>.\n\nThe loader for Webpack Markdown files that I use is: [frontmatter-markdown-loader](https://www.npmjs.com/package/frontmatter-markdown-loader) that allows me to put Vue components inside markdown files, as well as extract the <inline-code>frontmatter</inline-code> attributes as they do static generators like Jekyll. For making the code look pretty I apply: [HighlightJS](https://highlightjs.org/)\n\n## Let's talk about performance\n\nDo you remember that before I told you that one of my motivations for creating this website was to have a blog that had a good performance?\nWith Nuxt I have achieved it, and I still have a lot to optimize.\n\nIf you have arrived here, you have probably thought: *\"OMG Marina, you could just have made a blog in [Medium](https://medium.com/) and save you all this crazy work\"* and right now you're going to understand why I don't like Medium.\n\nWhile writing in Medium **you don't have control over your blog** such as CSS, SEO, adding functionalities, **Medium owns your content**, you have a limit of articles read for free... and **their performance seems quite bad**\n\nThanks to Google's tool [Lighthouse](https://developers.google.com/web/fundamentals/performance/audit/) we can analyze and compare Medium with my website.\n\n<image-responsive\n    imageURL=\"blog/vue-nuxt-blog/performance.jpg\"\n    :width=\"'952'\"\n    :height=\"'509'\"\n    alt=\"performance\" />\n\nAs you can see, Medium does a lot of things well, but performance is not one of them. This translates into user experience as a very slow load, especially on mobile devices. **Because performance is user experience.** We'll talk more about it another day.\nThe interesting thing here is that with Nuxt I managed to reach a **94%** performance compared to 40% offered by Medium in the first load, but the best thing is that since using cache systems, **the second load on my website the performance is 100%** while Medium scores 60%.\n\n## Web in two languages\n\nTo translate the web in English and Spanish I use [nuxt-i18n](https://github.com/nuxt-community/nuxt-i18n). It is a layer above [vue-i18n](https://github.com/kazupon/vue-i18n) which has lazy-loading translations. *Nuxt-i18n* automates how translations are worked on the Vue router, simplifying it for Nuxt. I recommend it for the router, although it has some things that I couldn't managed to make it work as the redirection cookie based on the browser language. But it's a problem that you have to accept if you use a new framework like Nuxt is.\n\n## Features and improvements I want to add in the future\n\n- I am not very happy with the amount of JS that I am putting into the web, I have more than 100k of synchronous JS and I want to reduce it. I still have to figure out how. My relationship with JS is love/hate. On the one hand I love everything you can do with it and on the other I hate it because it has a terrible cost on the performance of the page.\n\n- Adding a portfolio system with dynamic pages like the blog.\n\n- Improvements in design and usability.\n\n- Making the web totally accessible from the design to the code.\n\n- Cleaning CSS that I don't use and try to reduce it.\n\n- I criticize a lot Medium but I really like its design and some of its features, in fact I would like to add its famous *clap* button to my website.\n\n- Add comments to each post.\n\n- Add similar posts to the one you've read.\n\n## Things about the webapp that I'll write another day\n\n- Lazy loading of components and images in Nuxt, I will tell you which packages I use and the component I did to render a first image as a *placeholder* in base64 and afterwards asynchronously the final image.\n\n- How to use <inline-code>analyze</inline-code> of Nuxt to analyze the JS generated by Webpack in our app and to optimize it.\n\n- The big mistake I made along the way: Vuex. <nuxt-link to=\"/blog/vuex-what-is-when-use-it\">You can read it here</nuxt-link>\n\n- How to put emojis on your website through a sprite made in SCSS so that they always look the same regardless of the browser or device.\n\n- Loading Vue asynchronous components with the practical example of the travel map that is in the home page.\n\nI thought about publishing a starter about it but being realist, I wouldn't have enough time to maintain it. I think this post explains how to do it very well, but if you have any doubt left, you can always contact me at my email: [marina@marinaaisa](mailto:marina@marinaaisa.com).\n\nSince I don't have a comments section on each post, I would love to continue the conversation on [Twitter](https://twitter.com/MarinaAisa). All feedback is welcome! If you think there is something that it can be improved, you would help me a lot.\n",html:'<h2>Why did I re-do my website with Nuxt?</h2>\n<p>Although some of you already know me, I am <a href="https://twitter.com/MarinaAisa">Marina AÃ­sa</a>, UX Engineer (design and front-end) and I currently work at <a href="https://www.holaluz.com/en">Holaluz</a>.</p>\n<p>Last year, 2018, I was very focused on learning more about JavaScript, which was a pending subject and at the same time I learnt <a href="https://vuejs.org/">Vue.js</a>. Meanwhile at my workplace, we started using <a href="https://nuxtjs.org/">Nuxt.js</a> a framework on VueJS to remake both company\'s static and dynamic (SPA) webapps into components and create a design system with it.</p>\n<p>My previous website was made with <a href="https://middlemanapp.com/">Middleman</a> a static pages generator based on Ruby, so I took the opportunity to redo my website with Nuxt and Vue, in order to:</p>\n<ul>\n<li>To learn</li>\n<li>Improve performance</li>\n<li>Add functionality as a blog and portfolio system</li>\n<li>Add two languages, Spanish and English, <strong>also in blog posts</strong> but independently, since I guess I won\'t translate every post in both languages.</li>\n</ul>\n<p>What attracts me the most of Nuxt is the philosophy <em>serverless</em> (Nuxt can also be SSR tho) and the static prerendering it provides to SPA applications. Briefly, with this stack you can combine the best of a static website: compiled HTML -&gt; what leads to a better SEO, plus the best of a <em>single page application</em>: Webpack, cache optimizations, lazy-loading, functions and asynchronous data...</p>\n<h2>But where do I get the content if I don\'t have a server?</h2>\n<p>Nuxt, by following the architecture <a href="https://jamstack.org/">JAMStack</a> is built to get content through APIs, so many people use headless CMSs like <a href="https://www.contentful.com/">Contentful</a> or <a href="https://prismic.io/">Prismic</a>. At first I thought they were interesting options but I realized that it wasn\'t necessary for a website like mine since CMSs are oriented to be used by people without technical knowledge, besides they are expensive, they save assets on their own servers and they aren\'t the best option if I wanted to have the best performance.</p>\n<p><strong>Therefore, I decided to use a Markdowns system that I store in Github and call dynamically.</strong></p>\n<h3>Importing posts on the main page depending on the language</h3>\n<p>Using the asynchronous function <inline-code>asyncData</inline-code> that Nuxt provides only in its pages (it is not avalaible in its components) I import the Markdowns that I have saved in the folder <inline-code>content</inline-code> of the project. Later I return them in the form of a promise as an array of objects. As you can see below, this import depends on the constant <inline-code>blogs</inline-code> which will be the array <inline-code>blogsEs</inline-code> or <inline-code>blogsEn</inline-code> depending on the language of the page stored on the Vuex\'s state.</p>\n<pre><code class="language-javascript">import blogsEn from \'~/contents/en/blogsEn.js\'\nimport blogsEs from \'~/contents/tr/blogsTR.js\'\n\nasync asyncData ({app}) {\n  const blogs = app.i18n.locale === \'en\' ? blogsEn : blogsEs\n  \n  async function asyncImport (blogName) {\n    const wholeMD = await import(`~/content/${app.i18n.locale}/blog/${blogName}.md`)\n    return wholeMD.attributes\n  }\n\n  return Promise.all(blogs.map(blog =&gt; asyncImport(blog)))\n  .then((res) =&gt; {\n    return {\n      blogs: res\n    }\n  })\n}\n</code></pre>\n<p>The reason why I\'m importing the arrays containing the blogs names is because I want to use it also to generate the static pages through the object <a href="https://nuxtjs.org/api/configuration-generate/">generate</a> in the Nuxt configuration, file <inline-code>nuxt.config.js</inline-code>.</p>\n<pre><code class="language-javascript">import blogsEn from \'~/contents/en/blogsEn.js\'\nimport blogsEs from \'~/contents/tr/blogsTR.js\'\n\ngenerate: {\n  routes: [\n    \'/es\', \'404\'\n  ]\n  .concat(blogsEn.map(blog =&gt; `/blog/${blog}`))\n  .concat(blogsEs.map(blog =&gt; `es/blog/${blog}`))\n}\n</code></pre>\n<h3>Generating dynamic pages from Markdown files</h3>\n<p>Nuxt has a very interesting functionality, the creation of <a href="https://nuxtjs.org/guide/routing/#dynamic-routes">dynamic routes</a>.</p>\n<p>In the next import I use the function <inline-code>asyncData</inline-code> instead of <inline-code>data</inline-code> as it\'s usual in Vue, to first import each Markdown and then return a new object with the information I want to use in the template of the page.\n<strong>The URL will be equal to each markdown file\'s name.</strong>\nIn the case that the md file doesn\'t exist it will simply go to error page 404.</p>\n<pre><code class="language-javascript">async asyncData ({params, app}) {\n  const fileContent = await import(`~/contents/${app.i18n.locale}/blog/${params.slug}.md`)\n  const attr = fileContent.attributes\n  return {\n    colors: attr.colors,\n    date: attr.date,\n    description: attr.description,\n    id: attr.id,\n    name: params.slug,\n    related: attr.related,\n    renderFunc: fileContent.vue.render,\n    staticRenderFuncs: fileContent.vue.staticRenderFns,\n    title: attr.title,\n    urlTranslation: attr.urlTranslation\n  }\n}\n</code></pre>\n<p>If we wanted to create a portfolio in the future, it would be exactly the same as the blog. We would create within <inline-code>contents</inline-code> a folder called <inline-code>portfolio</inline-code> and we would do the same process that we have done with <inline-code>blogs</inline-code>.</p>\n<p>The loader for Webpack Markdown files that I use is: <a href="https://www.npmjs.com/package/frontmatter-markdown-loader">frontmatter-markdown-loader</a> that allows me to put Vue components inside markdown files, as well as extract the <inline-code>frontmatter</inline-code> attributes as they do static generators like Jekyll. For making the code look pretty I apply: <a href="https://highlightjs.org/">HighlightJS</a></p>\n<h2>Let\'s talk about performance</h2>\n<p>Do you remember that before I told you that one of my motivations for creating this website was to have a blog that had a good performance?\nWith Nuxt I have achieved it, and I still have a lot to optimize.</p>\n<p>If you have arrived here, you have probably thought: <em>&quot;OMG Marina, you could just have made a blog in <a href="https://medium.com/">Medium</a> and save you all this crazy work&quot;</em> and right now you\'re going to understand why I don\'t like Medium.</p>\n<p>While writing in Medium <strong>you don\'t have control over your blog</strong> such as CSS, SEO, adding functionalities, <strong>Medium owns your content</strong>, you have a limit of articles read for free... and <strong>their performance seems quite bad</strong></p>\n<p>Thanks to Google\'s tool <a href="https://developers.google.com/web/fundamentals/performance/audit/">Lighthouse</a> we can analyze and compare Medium with my website.</p>\n<p><image-responsive\n    imageURL="blog/vue-nuxt-blog/performance.jpg"\n    :width="\'952\'"\n    :height="\'509\'"\n    alt="performance" /></p>\n<p>As you can see, Medium does a lot of things well, but performance is not one of them. This translates into user experience as a very slow load, especially on mobile devices. <strong>Because performance is user experience.</strong> We\'ll talk more about it another day.\nThe interesting thing here is that with Nuxt I managed to reach a <strong>94%</strong> performance compared to 40% offered by Medium in the first load, but the best thing is that since using cache systems, <strong>the second load on my website the performance is 100%</strong> while Medium scores 60%.</p>\n<h2>Web in two languages</h2>\n<p>To translate the web in English and Spanish I use <a href="https://github.com/nuxt-community/nuxt-i18n">nuxt-i18n</a>. It is a layer above <a href="https://github.com/kazupon/vue-i18n">vue-i18n</a> which has lazy-loading translations. <em>Nuxt-i18n</em> automates how translations are worked on the Vue router, simplifying it for Nuxt. I recommend it for the router, although it has some things that I couldn\'t managed to make it work as the redirection cookie based on the browser language. But it\'s a problem that you have to accept if you use a new framework like Nuxt is.</p>\n<h2>Features and improvements I want to add in the future</h2>\n<ul>\n<li>\n<p>I am not very happy with the amount of JS that I am putting into the web, I have more than 100k of synchronous JS and I want to reduce it. I still have to figure out how. My relationship with JS is love/hate. On the one hand I love everything you can do with it and on the other I hate it because it has a terrible cost on the performance of the page.</p>\n</li>\n<li>\n<p>Adding a portfolio system with dynamic pages like the blog.</p>\n</li>\n<li>\n<p>Improvements in design and usability.</p>\n</li>\n<li>\n<p>Making the web totally accessible from the design to the code.</p>\n</li>\n<li>\n<p>Cleaning CSS that I don\'t use and try to reduce it.</p>\n</li>\n<li>\n<p>I criticize a lot Medium but I really like its design and some of its features, in fact I would like to add its famous <em>clap</em> button to my website.</p>\n</li>\n<li>\n<p>Add comments to each post.</p>\n</li>\n<li>\n<p>Add similar posts to the one you\'ve read.</p>\n</li>\n</ul>\n<h2>Things about the webapp that I\'ll write another day</h2>\n<ul>\n<li>\n<p>Lazy loading of components and images in Nuxt, I will tell you which packages I use and the component I did to render a first image as a <em>placeholder</em> in base64 and afterwards asynchronously the final image.</p>\n</li>\n<li>\n<p>How to use <inline-code>analyze</inline-code> of Nuxt to analyze the JS generated by Webpack in our app and to optimize it.</p>\n</li>\n<li>\n<p>The big mistake I made along the way: Vuex. <nuxt-link to="/blog/vuex-what-is-when-use-it">You can read it here</nuxt-link></p>\n</li>\n<li>\n<p>How to put emojis on your website through a sprite made in SCSS so that they always look the same regardless of the browser or device.</p>\n</li>\n<li>\n<p>Loading Vue asynchronous components with the practical example of the travel map that is in the home page.</p>\n</li>\n</ul>\n<p>I thought about publishing a starter about it but being realist, I wouldn\'t have enough time to maintain it. I think this post explains how to do it very well, but if you have any doubt left, you can always contact me at my email: <a href="mailto:marina@marinaaisa.com">marina@marinaaisa</a>.</p>\n<p>Since I don\'t have a comments section on each post, I would love to continue the conversation on <a href="https://twitter.com/MarinaAisa">Twitter</a>. All feedback is welcome! If you think there is something that it can be improved, you would help me a lot.</p>\n',attributes:{name:"blog-using-vue-nuxt-markdown",title:"Website with blog and portfolio using Vue.js + Nuxt + Markdown",year:"1 January 2019",color:"#8e7964",trans:"blog-usando-vue-nuxt-markdown",id:"vue-nuxt-blog",description:"How I created my new website with portfolio and blog in two languages. What technology I used and why.\n",_meta:{resourcePath:"/var/www/html/nuxt-markdown-blog-starter/contents/en/blog/blog-using-vue-nuxt-markdown.md"}},vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"dynamicMarkdown"},[_c(\'h2\',[_vm._v("Why did I re-do my website with Nuxt?")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_vm._m(1),_vm._v(" "),_vm._m(2),_vm._v(" "),_vm._m(3),_vm._v(" "),_vm._m(4),_vm._v(" "),_c(\'h2\',[_vm._v("But where do I get the content if I don\'t have a server?")]),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_c(\'h3\',[_vm._v("Importing posts on the main page depending on the language")]),_vm._v(" "),_c(\'p\',[_vm._v("Using the asynchronous function "),_c(\'inline-code\',[_vm._v("asyncData")]),_vm._v(" that Nuxt provides only in its pages (it is not avalaible in its components) I import the Markdowns that I have saved in the folder "),_c(\'inline-code\',[_vm._v("content")]),_vm._v(" of the project. Later I return them in the form of a promise as an array of objects. As you can see below, this import depends on the constant "),_c(\'inline-code\',[_vm._v("blogs")]),_vm._v(" which will be the array "),_c(\'inline-code\',[_vm._v("blogsEs")]),_vm._v(" or "),_c(\'inline-code\',[_vm._v("blogsEn")]),_vm._v(" depending on the language of the page stored on the Vuex\'s state.")],1),_vm._v(" "),_vm._m(7),_vm._v(" "),_c(\'p\',[_vm._v("The reason why I\'m importing the arrays containing the blogs names is because I want to use it also to generate the static pages through the object "),_c(\'a\',{attrs:{"href":"https://nuxtjs.org/api/configuration-generate/"}},[_vm._v("generate")]),_vm._v(" in the Nuxt configuration, file "),_c(\'inline-code\',[_vm._v("nuxt.config.js")]),_vm._v(".")],1),_vm._v(" "),_vm._m(8),_vm._v(" "),_c(\'h3\',[_vm._v("Generating dynamic pages from Markdown files")]),_vm._v(" "),_vm._m(9),_vm._v(" "),_c(\'p\',[_vm._v("In the next import I use the function "),_c(\'inline-code\',[_vm._v("asyncData")]),_vm._v(" instead of "),_c(\'inline-code\',[_vm._v("data")]),_vm._v(" as it\'s usual in Vue, to first import each Markdown and then return a new object with the information I want to use in the template of the page.\\n"),_c(\'strong\',[_vm._v("The URL will be equal to each markdown file\'s name.")]),_vm._v("\\nIn the case that the md file doesn\'t exist it will simply go to error page 404.")],1),_vm._v(" "),_vm._m(10),_vm._v(" "),_c(\'p\',[_vm._v("If we wanted to create a portfolio in the future, it would be exactly the same as the blog. We would create within "),_c(\'inline-code\',[_vm._v("contents")]),_vm._v(" a folder called "),_c(\'inline-code\',[_vm._v("portfolio")]),_vm._v(" and we would do the same process that we have done with "),_c(\'inline-code\',[_vm._v("blogs")]),_vm._v(".")],1),_vm._v(" "),_c(\'p\',[_vm._v("The loader for Webpack Markdown files that I use is: "),_c(\'a\',{attrs:{"href":"https://www.npmjs.com/package/frontmatter-markdown-loader"}},[_vm._v("frontmatter-markdown-loader")]),_vm._v(" that allows me to put Vue components inside markdown files, as well as extract the "),_c(\'inline-code\',[_vm._v("frontmatter")]),_vm._v(" attributes as they do static generators like Jekyll. For making the code look pretty I apply: "),_c(\'a\',{attrs:{"href":"https://highlightjs.org/"}},[_vm._v("HighlightJS")])],1),_vm._v(" "),_c(\'h2\',[_vm._v("Let\'s talk about performance")]),_vm._v(" "),_c(\'p\',[_vm._v("Do you remember that before I told you that one of my motivations for creating this website was to have a blog that had a good performance?\\nWith Nuxt I have achieved it, and I still have a lot to optimize.")]),_vm._v(" "),_vm._m(11),_vm._v(" "),_vm._m(12),_vm._v(" "),_vm._m(13),_vm._v(" "),_c(\'p\',[_c(\'image-responsive\',{attrs:{"imageURL":"blog/vue-nuxt-blog/performance.jpg","width":\'952\',"height":\'509\',"alt":"performance"}})],1),_vm._v(" "),_vm._m(14),_vm._v(" "),_c(\'h2\',[_vm._v("Web in two languages")]),_vm._v(" "),_vm._m(15),_vm._v(" "),_c(\'h2\',[_vm._v("Features and improvements I want to add in the future")]),_vm._v(" "),_vm._m(16),_vm._v(" "),_c(\'h2\',[_vm._v("Things about the webapp that I\'ll write another day")]),_vm._v(" "),_c(\'ul\',[_vm._m(17),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("How to use "),_c(\'inline-code\',[_vm._v("analyze")]),_vm._v(" of Nuxt to analyze the JS generated by Webpack in our app and to optimize it.")],1)]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("The big mistake I made along the way: Vuex. "),_c(\'nuxt-link\',{attrs:{"to":"/blog/vuex-what-is-when-use-it"}},[_vm._v("You can read it here")])],1)]),_vm._v(" "),_vm._m(18),_vm._v(" "),_vm._m(19)]),_vm._v(" "),_vm._m(20),_vm._v(" "),_vm._m(21)]) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Although some of you already know me, I am "),_c(\'a\',{attrs:{"href":"https://twitter.com/MarinaAisa"}},[_vm._v("Marina AÃ­sa")]),_vm._v(", UX Engineer (design and front-end) and I currently work at "),_c(\'a\',{attrs:{"href":"https://www.holaluz.com/en"}},[_vm._v("Holaluz")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Last year, 2018, I was very focused on learning more about JavaScript, which was a pending subject and at the same time I learnt "),_c(\'a\',{attrs:{"href":"https://vuejs.org/"}},[_vm._v("Vue.js")]),_vm._v(". Meanwhile at my workplace, we started using "),_c(\'a\',{attrs:{"href":"https://nuxtjs.org/"}},[_vm._v("Nuxt.js")]),_vm._v(" a framework on VueJS to remake both company\'s static and dynamic (SPA) webapps into components and create a design system with it.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("My previous website was made with "),_c(\'a\',{attrs:{"href":"https://middlemanapp.com/"}},[_vm._v("Middleman")]),_vm._v(" a static pages generator based on Ruby, so I took the opportunity to redo my website with Nuxt and Vue, in order to:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_vm._v("To learn")]),_vm._v(" "),_c(\'li\',[_vm._v("Improve performance")]),_vm._v(" "),_c(\'li\',[_vm._v("Add functionality as a blog and portfolio system")]),_vm._v(" "),_c(\'li\',[_vm._v("Add two languages, Spanish and English, "),_c(\'strong\',[_vm._v("also in blog posts")]),_vm._v(" but independently, since I guess I won\'t translate every post in both languages.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("What attracts me the most of Nuxt is the philosophy "),_c(\'em\',[_vm._v("serverless")]),_vm._v(" (Nuxt can also be SSR tho) and the static prerendering it provides to SPA applications. Briefly, with this stack you can combine the best of a static website: compiled HTML -> what leads to a better SEO, plus the best of a "),_c(\'em\',[_vm._v("single page application")]),_vm._v(": Webpack, cache optimizations, lazy-loading, functions and asynchronous data...")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Nuxt, by following the architecture "),_c(\'a\',{attrs:{"href":"https://jamstack.org/"}},[_vm._v("JAMStack")]),_vm._v(" is built to get content through APIs, so many people use headless CMSs like "),_c(\'a\',{attrs:{"href":"https://www.contentful.com/"}},[_vm._v("Contentful")]),_vm._v(" or "),_c(\'a\',{attrs:{"href":"https://prismic.io/"}},[_vm._v("Prismic")]),_vm._v(". At first I thought they were interesting options but I realized that it wasn\'t necessary for a website like mine since CMSs are oriented to be used by people without technical knowledge, besides they are expensive, they save assets on their own servers and they aren\'t the best option if I wanted to have the best performance.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Therefore, I decided to use a Markdowns system that I store in Github and call dynamically.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("import blogsEn from \'~/contents/en/blogsEn.js\'\\nimport blogsEs from \'~/contents/tr/blogsTR.js\'\\n\\nasync asyncData ({app}) {\\n  const blogs = app.i18n.locale === \'en\' ? blogsEn : blogsEs\\n  \\n  async function asyncImport (blogName) {\\n    const wholeMD = await import(`~/content/${app.i18n.locale}/blog/${blogName}.md`)\\n    return wholeMD.attributes\\n  }\\n\\n  return Promise.all(blogs.map(blog => asyncImport(blog)))\\n  .then((res) => {\\n    return {\\n      blogs: res\\n    }\\n  })\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("import blogsEn from \'~/contents/en/blogsEn.js\'\\nimport blogsEs from \'~/contents/tr/blogsTR.js\'\\n\\ngenerate: {\\n  routes: [\\n    \'/es\', \'404\'\\n  ]\\n  .concat(blogsEn.map(blog => `/blog/${blog}`))\\n  .concat(blogsEs.map(blog => `es/blog/${blog}`))\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Nuxt has a very interesting functionality, the creation of "),_c(\'a\',{attrs:{"href":"https://nuxtjs.org/guide/routing/#dynamic-routes"}},[_vm._v("dynamic routes")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("async asyncData ({params, app}) {\\n  const fileContent = await import(`~/contents/${app.i18n.locale}/blog/${params.slug}.md`)\\n  const attr = fileContent.attributes\\n  return {\\n    colors: attr.colors,\\n    date: attr.date,\\n    description: attr.description,\\n    id: attr.id,\\n    name: params.slug,\\n    related: attr.related,\\n    renderFunc: fileContent.vue.render,\\n    staticRenderFuncs: fileContent.vue.staticRenderFns,\\n    title: attr.title,\\n    urlTranslation: attr.urlTranslation\\n  }\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("If you have arrived here, you have probably thought: "),_c(\'em\',[_vm._v("\\"OMG Marina, you could just have made a blog in "),_c(\'a\',{attrs:{"href":"https://medium.com/"}},[_vm._v("Medium")]),_vm._v(" and save you all this crazy work\\"")]),_vm._v(" and right now you\'re going to understand why I don\'t like Medium.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("While writing in Medium "),_c(\'strong\',[_vm._v("you don\'t have control over your blog")]),_vm._v(" such as CSS, SEO, adding functionalities, "),_c(\'strong\',[_vm._v("Medium owns your content")]),_vm._v(", you have a limit of articles read for free... and "),_c(\'strong\',[_vm._v("their performance seems quite bad")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Thanks to Google\'s tool "),_c(\'a\',{attrs:{"href":"https://developers.google.com/web/fundamentals/performance/audit/"}},[_vm._v("Lighthouse")]),_vm._v(" we can analyze and compare Medium with my website.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("As you can see, Medium does a lot of things well, but performance is not one of them. This translates into user experience as a very slow load, especially on mobile devices. "),_c(\'strong\',[_vm._v("Because performance is user experience.")]),_vm._v(" We\'ll talk more about it another day.\\nThe interesting thing here is that with Nuxt I managed to reach a "),_c(\'strong\',[_vm._v("94%")]),_vm._v(" performance compared to 40% offered by Medium in the first load, but the best thing is that since using cache systems, "),_c(\'strong\',[_vm._v("the second load on my website the performance is 100%")]),_vm._v(" while Medium scores 60%.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("To translate the web in English and Spanish I use "),_c(\'a\',{attrs:{"href":"https://github.com/nuxt-community/nuxt-i18n"}},[_vm._v("nuxt-i18n")]),_vm._v(". It is a layer above "),_c(\'a\',{attrs:{"href":"https://github.com/kazupon/vue-i18n"}},[_vm._v("vue-i18n")]),_vm._v(" which has lazy-loading translations. "),_c(\'em\',[_vm._v("Nuxt-i18n")]),_vm._v(" automates how translations are worked on the Vue router, simplifying it for Nuxt. I recommend it for the router, although it has some things that I couldn\'t managed to make it work as the redirection cookie based on the browser language. But it\'s a problem that you have to accept if you use a new framework like Nuxt is.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'p\',[_vm._v("I am not very happy with the amount of JS that I am putting into the web, I have more than 100k of synchronous JS and I want to reduce it. I still have to figure out how. My relationship with JS is love/hate. On the one hand I love everything you can do with it and on the other I hate it because it has a terrible cost on the performance of the page.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Adding a portfolio system with dynamic pages like the blog.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Improvements in design and usability.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Making the web totally accessible from the design to the code.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Cleaning CSS that I don\'t use and try to reduce it.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("I criticize a lot Medium but I really like its design and some of its features, in fact I would like to add its famous "),_c(\'em\',[_vm._v("clap")]),_vm._v(" button to my website.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Add comments to each post.")])]),_vm._v(" "),_c(\'li\',[_c(\'p\',[_vm._v("Add similar posts to the one you\'ve read.")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',[_c(\'p\',[_vm._v("Lazy loading of components and images in Nuxt, I will tell you which packages I use and the component I did to render a first image as a "),_c(\'em\',[_vm._v("placeholder")]),_vm._v(" in base64 and afterwards asynchronously the final image.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',[_c(\'p\',[_vm._v("How to put emojis on your website through a sprite made in SCSS so that they always look the same regardless of the browser or device.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',[_c(\'p\',[_vm._v("Loading Vue asynchronous components with the practical example of the travel map that is in the home page.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I thought about publishing a starter about it but being realist, I wouldn\'t have enough time to maintain it. I think this post explains how to do it very well, but if you have any doubt left, you can always contact me at my email: "),_c(\'a\',{attrs:{"href":"mailto:marina@marinaaisa.com"}},[_vm._v("marina@marinaaisa")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Since I don\'t have a comments section on each post, I would love to continue the conversation on "),_c(\'a\',{attrs:{"href":"https://twitter.com/MarinaAisa"}},[_vm._v("Twitter")]),_vm._v(". All feedback is welcome! If you think there is something that it can be improved, you would help me a lot.")]) }]',component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"dynamicMarkdown"},[n("h2",[e._v("Why did I re-do my website with Nuxt?")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),n("h2",[e._v("But where do I get the content if I don't have a server?")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),n("h3",[e._v("Importing posts on the main page depending on the language")]),e._v(" "),n("p",[e._v("Using the asynchronous function "),n("inline-code",[e._v("asyncData")]),e._v(" that Nuxt provides only in its pages (it is not avalaible in its components) I import the Markdowns that I have saved in the folder "),n("inline-code",[e._v("content")]),e._v(" of the project. Later I return them in the form of a promise as an array of objects. As you can see below, this import depends on the constant "),n("inline-code",[e._v("blogs")]),e._v(" which will be the array "),n("inline-code",[e._v("blogsEs")]),e._v(" or "),n("inline-code",[e._v("blogsEn")]),e._v(" depending on the language of the page stored on the Vuex's state.")],1),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("The reason why I'm importing the arrays containing the blogs names is because I want to use it also to generate the static pages through the object "),n("a",{attrs:{href:"https://nuxtjs.org/api/configuration-generate/"}},[e._v("generate")]),e._v(" in the Nuxt configuration, file "),n("inline-code",[e._v("nuxt.config.js")]),e._v(".")],1),e._v(" "),e._m(8),e._v(" "),n("h3",[e._v("Generating dynamic pages from Markdown files")]),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("In the next import I use the function "),n("inline-code",[e._v("asyncData")]),e._v(" instead of "),n("inline-code",[e._v("data")]),e._v(" as it's usual in Vue, to first import each Markdown and then return a new object with the information I want to use in the template of the page.\n"),n("strong",[e._v("The URL will be equal to each markdown file's name.")]),e._v("\nIn the case that the md file doesn't exist it will simply go to error page 404.")],1),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("If we wanted to create a portfolio in the future, it would be exactly the same as the blog. We would create within "),n("inline-code",[e._v("contents")]),e._v(" a folder called "),n("inline-code",[e._v("portfolio")]),e._v(" and we would do the same process that we have done with "),n("inline-code",[e._v("blogs")]),e._v(".")],1),e._v(" "),n("p",[e._v("The loader for Webpack Markdown files that I use is: "),n("a",{attrs:{href:"https://www.npmjs.com/package/frontmatter-markdown-loader"}},[e._v("frontmatter-markdown-loader")]),e._v(" that allows me to put Vue components inside markdown files, as well as extract the "),n("inline-code",[e._v("frontmatter")]),e._v(" attributes as they do static generators like Jekyll. For making the code look pretty I apply: "),n("a",{attrs:{href:"https://highlightjs.org/"}},[e._v("HighlightJS")])],1),e._v(" "),n("h2",[e._v("Let's talk about performance")]),e._v(" "),n("p",[e._v("Do you remember that before I told you that one of my motivations for creating this website was to have a blog that had a good performance?\nWith Nuxt I have achieved it, and I still have a lot to optimize.")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),n("p",[n("image-responsive",{attrs:{imageURL:"blog/vue-nuxt-blog/performance.jpg",width:"952",height:"509",alt:"performance"}})],1),e._v(" "),e._m(14),e._v(" "),n("h2",[e._v("Web in two languages")]),e._v(" "),e._m(15),e._v(" "),n("h2",[e._v("Features and improvements I want to add in the future")]),e._v(" "),e._m(16),e._v(" "),n("h2",[e._v("Things about the webapp that I'll write another day")]),e._v(" "),n("ul",[e._m(17),e._v(" "),n("li",[n("p",[e._v("How to use "),n("inline-code",[e._v("analyze")]),e._v(" of Nuxt to analyze the JS generated by Webpack in our app and to optimize it.")],1)]),e._v(" "),n("li",[n("p",[e._v("The big mistake I made along the way: Vuex. "),n("nuxt-link",{attrs:{to:"/blog/vuex-what-is-when-use-it"}},[e._v("You can read it here")])],1)]),e._v(" "),e._m(18),e._v(" "),e._m(19)]),e._v(" "),e._m(20),e._v(" "),e._m(21)])},this.$options.staticRenderFns=[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Although some of you already know me, I am "),t("a",{attrs:{href:"https://twitter.com/MarinaAisa"}},[this._v("Marina AÃ­sa")]),this._v(", UX Engineer (design and front-end) and I currently work at "),t("a",{attrs:{href:"https://www.holaluz.com/en"}},[this._v("Holaluz")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Last year, 2018, I was very focused on learning more about JavaScript, which was a pending subject and at the same time I learnt "),t("a",{attrs:{href:"https://vuejs.org/"}},[this._v("Vue.js")]),this._v(". Meanwhile at my workplace, we started using "),t("a",{attrs:{href:"https://nuxtjs.org/"}},[this._v("Nuxt.js")]),this._v(" a framework on VueJS to remake both company's static and dynamic (SPA) webapps into components and create a design system with it.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("My previous website was made with "),t("a",{attrs:{href:"https://middlemanapp.com/"}},[this._v("Middleman")]),this._v(" a static pages generator based on Ruby, so I took the opportunity to redo my website with Nuxt and Vue, in order to:")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("To learn")]),e._v(" "),n("li",[e._v("Improve performance")]),e._v(" "),n("li",[e._v("Add functionality as a blog and portfolio system")]),e._v(" "),n("li",[e._v("Add two languages, Spanish and English, "),n("strong",[e._v("also in blog posts")]),e._v(" but independently, since I guess I won't translate every post in both languages.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("What attracts me the most of Nuxt is the philosophy "),t("em",[this._v("serverless")]),this._v(" (Nuxt can also be SSR tho) and the static prerendering it provides to SPA applications. Briefly, with this stack you can combine the best of a static website: compiled HTML -> what leads to a better SEO, plus the best of a "),t("em",[this._v("single page application")]),this._v(": Webpack, cache optimizations, lazy-loading, functions and asynchronous data...")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Nuxt, by following the architecture "),t("a",{attrs:{href:"https://jamstack.org/"}},[this._v("JAMStack")]),this._v(" is built to get content through APIs, so many people use headless CMSs like "),t("a",{attrs:{href:"https://www.contentful.com/"}},[this._v("Contentful")]),this._v(" or "),t("a",{attrs:{href:"https://prismic.io/"}},[this._v("Prismic")]),this._v(". At first I thought they were interesting options but I realized that it wasn't necessary for a website like mine since CMSs are oriented to be used by people without technical knowledge, besides they are expensive, they save assets on their own servers and they aren't the best option if I wanted to have the best performance.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Therefore, I decided to use a Markdowns system that I store in Github and call dynamically.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("import blogsEn from '~/contents/en/blogsEn.js'\nimport blogsEs from '~/contents/tr/blogsTR.js'\n\nasync asyncData ({app}) {\n  const blogs = app.i18n.locale === 'en' ? blogsEn : blogsEs\n  \n  async function asyncImport (blogName) {\n    const wholeMD = await import(`~/content/${app.i18n.locale}/blog/${blogName}.md`)\n    return wholeMD.attributes\n  }\n\n  return Promise.all(blogs.map(blog => asyncImport(blog)))\n  .then((res) => {\n    return {\n      blogs: res\n    }\n  })\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("import blogsEn from '~/contents/en/blogsEn.js'\nimport blogsEs from '~/contents/tr/blogsTR.js'\n\ngenerate: {\n  routes: [\n    '/es', '404'\n  ]\n  .concat(blogsEn.map(blog => `/blog/${blog}`))\n  .concat(blogsEs.map(blog => `es/blog/${blog}`))\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Nuxt has a very interesting functionality, the creation of "),t("a",{attrs:{href:"https://nuxtjs.org/guide/routing/#dynamic-routes"}},[this._v("dynamic routes")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("async asyncData ({params, app}) {\n  const fileContent = await import(`~/contents/${app.i18n.locale}/blog/${params.slug}.md`)\n  const attr = fileContent.attributes\n  return {\n    colors: attr.colors,\n    date: attr.date,\n    description: attr.description,\n    id: attr.id,\n    name: params.slug,\n    related: attr.related,\n    renderFunc: fileContent.vue.render,\n    staticRenderFuncs: fileContent.vue.staticRenderFns,\n    title: attr.title,\n    urlTranslation: attr.urlTranslation\n  }\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you have arrived here, you have probably thought: "),t("em",[this._v('"OMG Marina, you could just have made a blog in '),t("a",{attrs:{href:"https://medium.com/"}},[this._v("Medium")]),this._v(' and save you all this crazy work"')]),this._v(" and right now you're going to understand why I don't like Medium.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("While writing in Medium "),t("strong",[this._v("you don't have control over your blog")]),this._v(" such as CSS, SEO, adding functionalities, "),t("strong",[this._v("Medium owns your content")]),this._v(", you have a limit of articles read for free... and "),t("strong",[this._v("their performance seems quite bad")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Thanks to Google's tool "),t("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/audit/"}},[this._v("Lighthouse")]),this._v(" we can analyze and compare Medium with my website.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As you can see, Medium does a lot of things well, but performance is not one of them. This translates into user experience as a very slow load, especially on mobile devices. "),t("strong",[this._v("Because performance is user experience.")]),this._v(" We'll talk more about it another day.\nThe interesting thing here is that with Nuxt I managed to reach a "),t("strong",[this._v("94%")]),this._v(" performance compared to 40% offered by Medium in the first load, but the best thing is that since using cache systems, "),t("strong",[this._v("the second load on my website the performance is 100%")]),this._v(" while Medium scores 60%.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To translate the web in English and Spanish I use "),t("a",{attrs:{href:"https://github.com/nuxt-community/nuxt-i18n"}},[this._v("nuxt-i18n")]),this._v(". It is a layer above "),t("a",{attrs:{href:"https://github.com/kazupon/vue-i18n"}},[this._v("vue-i18n")]),this._v(" which has lazy-loading translations. "),t("em",[this._v("Nuxt-i18n")]),this._v(" automates how translations are worked on the Vue router, simplifying it for Nuxt. I recommend it for the router, although it has some things that I couldn't managed to make it work as the redirection cookie based on the browser language. But it's a problem that you have to accept if you use a new framework like Nuxt is.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("I am not very happy with the amount of JS that I am putting into the web, I have more than 100k of synchronous JS and I want to reduce it. I still have to figure out how. My relationship with JS is love/hate. On the one hand I love everything you can do with it and on the other I hate it because it has a terrible cost on the performance of the page.")])]),e._v(" "),n("li",[n("p",[e._v("Adding a portfolio system with dynamic pages like the blog.")])]),e._v(" "),n("li",[n("p",[e._v("Improvements in design and usability.")])]),e._v(" "),n("li",[n("p",[e._v("Making the web totally accessible from the design to the code.")])]),e._v(" "),n("li",[n("p",[e._v("Cleaning CSS that I don't use and try to reduce it.")])]),e._v(" "),n("li",[n("p",[e._v("I criticize a lot Medium but I really like its design and some of its features, in fact I would like to add its famous "),n("em",[e._v("clap")]),e._v(" button to my website.")])]),e._v(" "),n("li",[n("p",[e._v("Add comments to each post.")])]),e._v(" "),n("li",[n("p",[e._v("Add similar posts to the one you've read.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Lazy loading of components and images in Nuxt, I will tell you which packages I use and the component I did to render a first image as a "),t("em",[this._v("placeholder")]),this._v(" in base64 and afterwards asynchronously the final image.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("How to put emojis on your website through a sprite made in SCSS so that they always look the same regardless of the browser or device.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Loading Vue asynchronous components with the practical example of the travel map that is in the home page.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I thought about publishing a starter about it but being realist, I wouldn't have enough time to maintain it. I think this post explains how to do it very well, but if you have any doubt left, you can always contact me at my email: "),t("a",{attrs:{href:"mailto:marina@marinaaisa.com"}},[this._v("marina@marinaaisa")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Since I don't have a comments section on each post, I would love to continue the conversation on "),t("a",{attrs:{href:"https://twitter.com/MarinaAisa"}},[this._v("Twitter")]),this._v(". All feedback is welcome! If you think there is something that it can be improved, you would help me a lot.")])}]}}}}}}]);